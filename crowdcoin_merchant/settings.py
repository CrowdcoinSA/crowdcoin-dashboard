"""
Django settings for crowdcoin_merchant project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DJANGO_DEBUG',False))

CROWDCOIN_ENV = os.environ.get('CROWDCOIN_ENV','DEVELOPMENT')

ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS').split(',') if os.environ.get('DJANGO_ALLOWED_HOSTS') else ['*']

#Crowdcoin API
CROWDCOIN_API_URL  = os.environ.get('CROWDCOIN_API_URL','https://live.crowdcoin.co.za/api/v1/')
CROWDCOIN_API_KEY =  os.environ.get('CROWDCOIN_API_KEY')
CROWDCOIN_WEB_URL  = os.environ.get('CROWDCOIN_WEB_URL','http://0.0.0.0:8000/')
SITE_ID=1

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django.contrib.humanize',
    'django.contrib.sites',
    'hijack',
    'hijack_admin',
    'compat',
    'merchant_portal',
    'crowdcoin_backends',
    'payfast',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


AUTHENTICATION_BACKENDS = [
    'crowdcoin_backends.auth.RemoteBackend',
    #'django.contrib.auth.backends.ModelBackend',
]



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

from whitenoise import WhiteNoise

# Simplified static file serving with WhiteNoise adding cachable files and gzip support
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static_files"),
]

ROOT_URLCONF = 'crowdcoin_merchant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'merchant_portal.custom_context_processors.get_merchant',
                'merchant_portal.custom_context_processors.global_config',
            ],
        },
    },
]

WSGI_APPLICATION = 'crowdcoin_merchant.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
import dj_database_url
DATABASES = {'default': dj_database_url.config(engine='django.db.backends.postgresql_psycopg2')}




# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-za'

TIME_ZONE = 'Africa/Johannesburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/


STATIC_URL = '/static/'


# Hijack

HIJACK_ALLOW_GET_REQUESTS = True

HIJACK_USE_BOOTSTRAP = True

HIJACK_LOGIN_REDIRECT_URL = '/'

HIJACK_LOGOUT_REDIRECT_URL = '/admin/auth/user/'

LOGIN_URL='/login/'

LOGOUT_REDIRECT_URL='/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format' : "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt' : "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': 'crowdcoin-django.log',
            'formatter': 'verbose'
        },
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'DEBUG',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers':['file','console'],
            'propagate': True,
            'level':'WARNING',
            'formatter': 'verbose',
        },
        'merchant_portal': {
            'handlers': ['file','console'],
            'level': 'WARNING',
            'formatter': ['verbose'],
        },
        'crowdcoin_backends': {
            'handlers': ['file','console'],
            'level': 'INFO',
            'formatter': ['verbose'],
        }
    }
}

#Payfast
PAYFAST_TEST_MODE = bool(os.environ.get('PAYFAST_TEST_MODE',False))

PAYFAST_MERCHANT_ID = os.environ.get('PAYFAST_MERCHANT_ID')

PAYFAST_MERCHANT_KEY = os.environ.get('PAYFAST_MERCHANT_KEY')